[IDENTIFIER OPERATOR] [WHITE_SPACE  ] [EQUAL =] [WHITE_SPACE  ] [HEREGEX_START ///] [HEREGEX  ^ ] [REGEX_PARENTHESIS_START (] [TERMINATOR \n]
[HEREGEX   ?: ] [REGEX_BRACKET_START [] [HEREGEX -=] [REGEX_BRACKET_END ]] [HEREGEX >             ] [COMMENT # function] [TERMINATOR \n]
[HEREGEX    | ] [REGEX_BRACKET_START [] [HEREGEX -+*/%<>&|^!?=] [REGEX_BRACKET_END ]] [HEREGEX =  ] [COMMENT # compound assign / compare] [TERMINATOR \n]
[HEREGEX    | >>>=?             ] [COMMENT # zero-fill right shift] [TERMINATOR \n]
[HEREGEX    | ] [REGEX_PARENTHESIS_START (] [REGEX_BRACKET_START [] [HEREGEX -+:] [REGEX_BRACKET_END ]] [REGEX_PARENTHESIS_END )] [HEREGEX \1         ] [COMMENT # doubles] [TERMINATOR \n]
[HEREGEX    | ] [REGEX_PARENTHESIS_START (] [REGEX_BRACKET_START [] [HEREGEX &|<>] [REGEX_BRACKET_END ]] [REGEX_PARENTHESIS_END )] [HEREGEX \2=?      ] [COMMENT # logic / shift] [TERMINATOR \n]
[HEREGEX    | \?\.              ] [COMMENT # soak access] [TERMINATOR \n]
[HEREGEX    | \.] [REGEX_BRACE_START {] [HEREGEX 2,3] [REGEX_BRACE_END }] [HEREGEX            ] [COMMENT # range or splat] [TERMINATOR \n]
[REGEX_PARENTHESIS_END )] [HEREGEX  ] [HEREGEX_END ///] [TERMINATOR \n]
